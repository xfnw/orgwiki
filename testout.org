#+TITLE: testout labsim considered harmful
#+SETUPFILE: setupfile.org

#+begin_quote
"[Testout] is not a teaching instrument, it's an annoyance instrument"
-- mr hegler 
#+end_quote

#+TOC: headlines 2

* security

** linux (4.4)
at least they tried. testout and cengage usually ignore the existance
of 80.7% of servers[fn:5:[[https://w3techs.com/technologies/overview/operating_system][w3techs usage of unix-like operating systems]]
on known webservers] and only talk about windows.

*** listing sockets
#+begin_quote
Which command should you use to display both listening and
non-listening sockets on your Linux system? (Tip: enter the command as
if in Command Prompt.)

A: netstat -a
#+end_quote

~netstat~ on linux (but not on openbsd) is deprecated, ~ss~ (which
testout already knows about, they mentioned it on the previous page)
should be used instead.

*** nmap tcp
#+begin_quote
Which command should you use to scan for open TCP ports on your Linux
system? (Tip: enter the command as if in Command Prompt.)

A: nmap -sT
#+end_quote

... have the people at testout never used ~nmap~ before? it defaults
to scanning TCP, even without ~-sT~. 

** NATs (5.4)
*** site-local ipv6 addresses
#+begin_quote
IPv6 reserves all addresses beginning with a binary 1111 1110 11
(hexadecimal FEC0::/48) for private IP networks. This address range is
called the site-local address range.
#+end_quote

ipv6 site-local addresses are deprecated[fn:1:[[https://datatracker.ietf.org/doc/html/rfc3879][RFC3879]]]. the range is
~fec0::/10~, not ~fec0::/48~[fn:2:[[https://datatracker.ietf.org/doc/html/rfc3513#section-2.4][RFC3513, section 2.4]]] (hint: if you
count how many numbers are in ~1111 1110 11~, it is definitely not 48)

#+begin_example
fec0::/10 starts at fec0:: and ends at feff:ffff:ffff:ffff:ffff:ffff:ffff:ffff
fec0::/48 starts at fec0:: and ends at fec0::ffff:ffff:ffff:ffff:ffff
#+end_example

that's off by a factor of 274,877,906,943![fn:3:0xff ffff ffff
minus 0xc0 0000 0000 is 0x3f ffff ffff]

*** concurrent connections
#+begin_quote
NAT supports a limit of 5,000 concurrent connections.
#+end_quote

what!? where did they get this number from?

65535 (max number of ports) would be understandable, however since a
NAT can re-use the same port number for concurrent connections for
different source+destination combinations, this would only apply to
connections from a single host going to a single host.

there would also be resource constraints due to ram, or even hard
limits on some consumer devices such as 4096, but 5000 would not make
any sense for this. 5000 is not a power of two (or a power of two
minus one), it would just be wasting resources to arbitrarily limit at
specifically 5000.

i could not find a single corroboration of this 5000 number, even when
specifically including 5000 in searches.

** VPNs (5.5)
no wireguard? :(

*** tls port
#+begin_quote
Transport Layer Security:
- Uses port 443 or port 30
#+end_quote

port 30 neither listed in linux nor openbsd's ~services(5)~
file[fn:4:which may be found at ~/etc/services~], and is unassigned by
the [[https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml][IANA]]. it is also not a common unofficial port, as it is not
present in [[https://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers][wikipedia's list of common tcp/udp ports]].

why would anyone ever choose any <1024 port other than 443 for
tls? the whole point of tunneling stuff over tls rather than a /real/
vpn protocol is for placating networks that are afraid of non-80/443
traffic (ie hotel wifi). tls server name indication exists.
